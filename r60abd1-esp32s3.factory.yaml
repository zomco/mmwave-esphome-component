pacakage:
  core: !include r60abd1-esp32s3.yaml

esphome:
  # This will allow for project identification,
  # configuration and updates.
  project:
    name: zomco.r60abd1
    version: dev # This will be replaced by the github workflows with the `release` version

# This should point to the public location of the yaml file that will be adopted.
# In this case it is the core yaml file that does not contain the extra things
# that are provided by this factory yaml file as the user does not need these once adopted.
dashboard_import:
  package_import_url: github://zomco/mmwave-esphome-component/r60abd1.yaml@main

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# Sets up the improv via serial client for Wi-Fi provisioning.
# Handy if your device has a usb port for the user to add credentials when they first get it.
improv_serial:

# Configure the UART bus
uart:
  id: uart_bus
  tx_pin: GPIO13
  rx_pin: GPIO14
  baud_rate: 115200

# Configure the component hub
r60abd1:
  id: radar_hub # 组件核心的 ID
  uart_id: uart_bus # 将其链接到上面定义的 UART 总线

# Configure Sensors
sensor:
  - platform: r60abd1 # 平台名称与组件文件夹名称匹配
    id: radar_hub # 将每个传感器链接到核心组件 ID
    distance:
      name: "毫米波雷达 人体距离" # Home Assistant 中显示的名称
      # unit_of_measurement, icon 等在 sensor.py 中定义
      # 如果需要，可以在此处覆盖它们，例如：
      # icon: "mdi:map-marker-radius"
    motion_state:
      name: "毫米波雷达 运动状态码" # 0:无, 1:静止, 2:活跃
    body_movement:
      name: "毫米波雷达 体动幅度" # 0-100
    heart_rate:
      name: "毫米波雷达 心率" # bpm
      # 可选：应用过滤器以排除不合理的值
      filters:
        - range:
            min: 30.0
            max: 200.0
    respiration_rate:
      name: "毫米波雷达 呼吸率" # rpm
      # 可选：应用过滤器
      filters:
        - range:
            min: 1.0
            max: 50.0
    sleep_score:
      name: "毫米波雷达 睡眠评分" # 0-100
    position_x:
      name: "毫米波雷达 位置 X" # cm
    position_y:
      name: "毫米波雷达 位置 Y" # cm
    position_z:
      name: "毫米波雷达 位置 Z" # cm

# Configure Binary Sensors
binary_sensor:
  - platform: micradar_r60abd1
    id: radar_hub # 链接到核心
    presence:
      name: "毫米波雷达 人体存在" # true: 有人, false: 无人
    bed_status:
      name: "毫米波雷达 在床状态" # true: 在床, false: 离床

# Configure Text Sensors
text_sensor:
  - platform: micradar_r60abd1
    id: radar_hub # 链接到核心
    motion_text:
      name: "毫米波雷达 运动状态" # 无, 静止, 活跃
    respiration_info:
      name: "毫米波雷达 呼吸信息" # 正常, 过高, 过低, 无
    sleep_stage:
      name: "毫米波雷达 睡眠阶段" # 深睡, 浅睡, 清醒, 无
    firmware_version:
      name: "毫米波雷达 固件版本" # 显示雷达的固件版本号

# --- Configure Control Entities ---

# Configure Switches
switch:
  - platform: micradar_r60abd1
    id: radar_hub # 链接到核心
    presence_detection: # 对应 switch.py 中的 key
      name: "雷达 人体存在检测开关"
    heart_rate_detection:
      name: "雷达 心率检测开关"
    respiration_detection:
      name: "雷达 呼吸检测开关"
    sleep_monitoring:
      name: "雷达 睡眠监测开关"
    heart_rate_waveform:
      name: "雷达 心率波形上报开关"
    respiration_waveform:
      name: "雷达 呼吸波形上报开关"
    struggle_detection:
      name: "雷达 异常挣扎检测开关"
    unattended_detection:
      name: "雷达 无人计时功能开关"

# Configure Numbers
number:
  - platform: micradar_r60abd1
    id: radar_hub # 链接到核心
    respiration_low_threshold: # 对应 number.py 中的 key
      name: "雷达 呼吸过低阈值" # 设置呼吸率低于多少时报告“过低”
      # min/max/step 在 number.py 中定义 (10-20 rpm, step 1)
    unattended_time:
      name: "雷达 无人计时时长" # 设置无人多久后触发“无人计时异常”
      # min/max/step 在 number.py 中定义 (30-180 min, step 10)
    sleep_end_time:
      name: "雷达 睡眠截止时长" # 设置离床多久后判断睡眠结束
      # min/max/step 在 number.py 中定义 (5-120 min, step 1)

# Configure Selects
select:
  - platform: micradar_r60abd1
    id: radar_hub # 链接到核心
    struggle_sensitivity: # 对应 select.py 中的 key
      name: "雷达 挣扎检测灵敏度" # 设置异常挣扎检测的灵敏度
      # options 在 select.py 中定义 (Low, Medium, High)